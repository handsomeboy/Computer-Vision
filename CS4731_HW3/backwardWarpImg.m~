function [mask, result_img] = backwardWarpImg(src_img, resultToSrc_H,...
    dest_canvas_width_height)

% make blank initially (black)
result_img = zeros(dest_canvas_width_height(2), dest_canvas_width_height(1),3);
mask = zeros(dest_canvas_width_height(2), dest_canvas_width_height(1));

% % each point in the image
% for i=1:size(src_img,1)
%     for j=1:size(src_img,2)
%         % find it's closest point in the new image
%         x3 = resultToSrc_H * [j;i;1];
%         x3 = x3 / x3(3);
%         x2 = round(x3(1:2));
%         
%         % update resulting img
%         result_img(x2(2),x2(1),:) = src_img(i,j,:);
%         % update mask
%         mask(x2(2), x2(1)) = 1;
%     end
% end

% each point in the image
for i=1:dest_canvas_width_height(1)
    for j=1:dest_canvas_width_height(2)
        % find it's closest point in the new image
        x3 = resultToSrc_H * [j;i;1];
        x3 = x3 / x3(3);
        x2 = round(x3(1:2));

        % update resulting img
        a = src_img(x2(1), x2(2),:);
        result_img(j,i,:) = a;
        % update mask
        mask(x2(2), x2(1)) = 1;
    end
end
imshow(mask);
